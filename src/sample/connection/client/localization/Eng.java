package sample.connection.client.localization;

import java.util.ListResourceBundle;

public class Eng extends ListResourceBundle {
    private static final Object[][] contents =
            {
                    {"AuthorizeWindow", "Authorize"},
                    {"MainWindow", "Collection control"},
                    {"AddWindow", "Add element"},
                    {"Login", "Login"},
                    {"LoginIn", "Enter"},
                    {"Register", "Register"},
                    {"LoginFail", "Wrong login or password!"},
                    {"Authorization", "Authorization"},
                    {"EnterLogin", "Enter login"},
                    {"EnterPass", "Enter pass"},
                    {"Collection", "Collection"},
                    {"Coordinates", "Coordinates"},
                    {"Username", "Username:"},
                    {"Logout", "Logout"},
                    {"AddElement", "Add Element"},
                    {"InfoButton", "Info"},
                    {"HelpButton", "Help"},
                    {"ClearCollection", "Clear table"},
                    {"FilterByDistance", "Filter by dist."},
                    {"Remove", "Remove"},
                    {"UniqueDistanceButton", "Unique dist."},
                    {"CountByDistanceButton", "Count by dist."},
                    {"ShowButton", "Show"},
                    {"Sort", "Sort"},
                    {"ExecuteScript", "Execute script"},
                    {"FilteringText", "Filtering by: "},
                    {"IdColumn", "ID"},
                    {"NameColumn", "Name"},
                    {"XCoordColumn", "Coord. х"},
                    {"YCoordColumn", "Coord. у"},
                    {"XFromColumn", "From х"},
                    {"YFromColumn", "From у"},
                    {"ZFromColumn", "From z"},
                    {"XToColumn", "To х"},
                    {"YToColumn", "To у"},
                    {"ZToColumn", "To z"},
                    {"DistanceColumn", "Distance"},
                    {"CreationDateColumn", "Creat. Date"},
                    {"OwnerColumn", "Owner"},
                    {"AddName", "Name"},
                    {"AddNamePrompt", "Enter name"},
                    {"AddCoordinates", "Coordinates"},
                    {"AddLocation", "Location"},
                    {"AddFrom", "From"},
                    {"AddTo", "To"},
                    {"AddDistance", "Enter distance"},
                    {"AddIfMax", "Add if Max"},
                    {"AddIfMin", "Add if Min"},
                    {"AddButton", "Add"},
                    {"ClearButton", "Clear"},
                    {"AddElementSuccess", "Element was added successful"},
                    {"AddElementFail", "Element wasn't added"},
                    {"AddElementMaxFail", "Element isn't maximal"},
                    {"AddElementMinFail", "Element isn't minimal"},
                    {"RegisterSuccess", "You registered successful!"},
                    {"RegisterFail", "Register was failed"},
                    {"NotSelectedElementForDelete", "You didn't select item for delete"},
                    {"Unique distance", "Unique distance"},
                    {"Info", "Info about collection"},
                    {"Help", "Help"},
                    {"Show", "Show elements"},
                    {"PermissionException", "You haven't permission to change fields of this element"},
                    {"NumberFormatException", "Invalid data entered"},
                    {"Type", "Type"},
                    {"CollectionSize", "Collection size"},
                    {"UniqueDistance", "Unique distance"},
                    {"HelpAnswer", "info: print information about the collection (type, date of initialization, number of elements, etc.) to standard output\n show: Print all the elements of the collection in string representation to standard output.\n add {element}: add a new element to the collection\n clear: clear the collection\n count_by_distance distance: print the number of elements whose distance field is equal to the given\n print_unique_distance distance: Print the unique values of the distance field"},
                    {"CountButton", "Count"},
                    {"CountByDistanceText", "Count by distance"},
                    {"NumberOfCoincidences", "Number of coincidences"},
                    {"ExecuteScriptName", "Execute Script"},
                    {"ChooseFile", "Choose file"},
                    {"ChosenFile", "Chosen file:"},
                    {"StopScript", "Stop"},
                    {"ExecResultText", "Result of executing script"},
                    {"Execute", "Execute"},
                    {"FileError", " this file isn't script"},
                    {"Language", "Language"}
            };

    @Override
    protected Object[][] getContents() {
        return contents;
    }
}
